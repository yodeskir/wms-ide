import { Injectable, Output, EventEmitter } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { environment } from '../../environments/environment';
import 'rxjs/add/operator/filter';
import 'rxjs/add/operator/map';
import { DomSanitizer } from '@angular/platform-browser';

@Injectable()
export class NavMenuService {
  baseUrl = environment.baseUrl;
  @Output() createNewEntryControlTrigger: EventEmitter<any> = new EventEmitter();

  constructor(private http: HttpClient, private sanitizer: DomSanitizer) {

  }

  getMapFile(m) {
    const s = this.http.get(this.baseUrl + '/mapobj/' + m.username + '/' + m.name);
    return s.map((mapfile: any) => {
      return mapfile;
    }).toPromise();
  }

  getLayersMenu(m) {
    const s = this.http.get(this.baseUrl + '/layers/menu/' + m.username + '/' + m.name);
    return s.map((layersmenu: any) => {
      return layersmenu;
    }).toPromise();
  }

  getSvgIcon(layerType) {
    if (!layerType) {
      return this.sanitizer.bypassSecurityTrustHtml('<svg viewBox="64 64 896 896" fill="currentColor" width="1em" height="1em" data-icon="global" aria-hidden="true"><path d="M854.4 800.9c.2-.3.5-.6.7-.9C920.6 722.1 960 621.7 960 512s-39.4-210.1-104.8-288c-.2-.3-.5-.5-.7-.8-1.1-1.3-2.1-2.5-3.2-3.7-.4-.5-.8-.9-1.2-1.4l-4.1-4.7-.1-.1c-1.5-1.7-3.1-3.4-4.6-5.1l-.1-.1c-3.2-3.4-6.4-6.8-9.7-10.1l-.1-.1-4.8-4.8-.3-.3c-1.5-1.5-3-2.9-4.5-4.3-.5-.5-1-1-1.6-1.5-1-1-2-1.9-3-2.8-.3-.3-.7-.6-1-1C736.4 109.2 629.5 64 512 64s-224.4 45.2-304.3 119.2c-.3.3-.7.6-1 1-1 .9-2 1.9-3 2.9-.5.5-1 1-1.6 1.5-1.5 1.4-3 2.9-4.5 4.3l-.3.3-4.8 4.8-.1.1c-3.3 3.3-6.5 6.7-9.7 10.1l-.1.1c-1.6 1.7-3.1 3.4-4.6 5.1l-.1.1c-1.4 1.5-2.8 3.1-4.1 4.7-.4.5-.8.9-1.2 1.4-1.1 1.2-2.1 2.5-3.2 3.7-.2.3-.5.5-.7.8C103.4 301.9 64 402.3 64 512s39.4 210.1 104.8 288c.2.3.5.6.7.9l3.1 3.7c.4.5.8.9 1.2 1.4l4.1 4.7c0 .1.1.1.1.2 1.5 1.7 3 3.4 4.6 5l.1.1c3.2 3.4 6.4 6.8 9.6 10.1l.1.1c1.6 1.6 3.1 3.2 4.7 4.7l.3.3c3.3 3.3 6.7 6.5 10.1 9.6 80.1 74 187 119.2 304.5 119.2s224.4-45.2 304.3-119.2a300 300 0 0 0 10-9.6l.3-.3c1.6-1.6 3.2-3.1 4.7-4.7l.1-.1c3.3-3.3 6.5-6.7 9.6-10.1l.1-.1c1.5-1.7 3.1-3.3 4.6-5 0-.1.1-.1.1-.2 1.4-1.5 2.8-3.1 4.1-4.7.4-.5.8-.9 1.2-1.4a99 99 0 0 0 3.3-3.7zm4.1-142.6c-13.8 32.6-32 62.8-54.2 90.2a444.07 444.07 0 0 0-81.5-55.9c11.6-46.9 18.8-98.4 20.7-152.6H887c-3 40.9-12.6 80.6-28.5 118.3zM887 484H743.5c-1.9-54.2-9.1-105.7-20.7-152.6 29.3-15.6 56.6-34.4 81.5-55.9A373.86 373.86 0 0 1 887 484zM658.3 165.5c39.7 16.8 75.8 40 107.6 69.2a394.72 394.72 0 0 1-59.4 41.8c-15.7-45-35.8-84.1-59.2-115.4 3.7 1.4 7.4 2.9 11 4.4zm-90.6 700.6c-9.2 7.2-18.4 12.7-27.7 16.4V697a389.1 389.1 0 0 1 115.7 26.2c-8.3 24.6-17.9 47.3-29 67.8-17.4 32.4-37.8 58.3-59 75.1zm59-633.1c11 20.6 20.7 43.3 29 67.8A389.1 389.1 0 0 1 540 327V141.6c9.2 3.7 18.5 9.1 27.7 16.4 21.2 16.7 41.6 42.6 59 75zM540 640.9V540h147.5c-1.6 44.2-7.1 87.1-16.3 127.8l-.3 1.2A445.02 445.02 0 0 0 540 640.9zm0-156.9V383.1c45.8-2.8 89.8-12.5 130.9-28.1l.3 1.2c9.2 40.7 14.7 83.5 16.3 127.8H540zm-56 56v100.9c-45.8 2.8-89.8 12.5-130.9 28.1l-.3-1.2c-9.2-40.7-14.7-83.5-16.3-127.8H484zm-147.5-56c1.6-44.2 7.1-87.1 16.3-127.8l.3-1.2c41.1 15.6 85 25.3 130.9 28.1V484H336.5zM484 697v185.4c-9.2-3.7-18.5-9.1-27.7-16.4-21.2-16.7-41.7-42.7-59.1-75.1-11-20.6-20.7-43.3-29-67.8 37.2-14.6 75.9-23.3 115.8-26.1zm0-370a389.1 389.1 0 0 1-115.7-26.2c8.3-24.6 17.9-47.3 29-67.8 17.4-32.4 37.8-58.4 59.1-75.1 9.2-7.2 18.4-12.7 27.7-16.4V327zM365.7 165.5c3.7-1.5 7.3-3 11-4.4-23.4 31.3-43.5 70.4-59.2 115.4-21-12-40.9-26-59.4-41.8 31.8-29.2 67.9-52.4 107.6-69.2zM165.5 365.7c13.8-32.6 32-62.8 54.2-90.2 24.9 21.5 52.2 40.3 81.5 55.9-11.6 46.9-18.8 98.4-20.7 152.6H137c3-40.9 12.6-80.6 28.5-118.3zM137 540h143.5c1.9 54.2 9.1 105.7 20.7 152.6a444.07 444.07 0 0 0-81.5 55.9A373.86 373.86 0 0 1 137 540zm228.7 318.5c-39.7-16.8-75.8-40-107.6-69.2 18.5-15.8 38.4-29.7 59.4-41.8 15.7 45 35.8 84.1 59.2 115.4-3.7-1.4-7.4-2.9-11-4.4zm292.6 0c-3.7 1.5-7.3 3-11 4.4 23.4-31.3 43.5-70.4 59.2-115.4 21 12 40.9 26 59.4 41.8a373.81 373.81 0 0 1-107.6 69.2z"></path></svg>');
    } else {
      switch (layerType.toUpperCase()) {
        case 'POINT':
          return this.sanitizer.bypassSecurityTrustHtml(`<svg x="0px" y="0px" viewBox="-0.28360095620155334 -1.9297456741333008 64.67667388916016 57.36429977416992" fill="currentColor" width="1em" height="1em">
        <rect id="svgEditorBackground" x="0" y="0" width="85.05500030517578" height="85.05500030517578" style="fill:none;stroke:none;"/>
        <g transform="matrix(1 0 0 1 -10.6449 -2.08724)">
          <g>
            <path d="M33.59679084478023,41.02470379546996c0,-6.263999999999996,-5.095000000000013,-11.359000000000044,-11.356000000000023,-11.359000000000044s-11.354000000000017,5.096000000000053,-11.354000000000017,11.359000000000044c0,6.2590000000000074,5.094000000000019,11.352000000000018,11.354000000000017,11.352000000000018c6.782809817823164,0.10236196356461846,11.356000000000023,-5.093999999999994,11.356000000000023,-11.352000000000018ZM14.88579084478019,41.02470379546996c0,-4.057999999999993,3.299000000000005,-7.3589999999999876,7.3540000000000045,-7.3589999999999876c4.057000000000002,0,7.3559999999999945,3.3019999999999854,7.3559999999999945,7.3589999999999876c0,4.054000000000002,-3.29999999999999,7.352000000000018,-7.3559999999999945,7.352000000000018c-4.055,-0.002000000000016655,-7.3540000000000045,-3.3000000000000114,-7.3540000000000045,-7.352000000000018Z" transform="matrix(1.13649 0 0 1.13649 -1.56658 -4.97332)"/>
            <path d="M52.932690444075014,14.098295929527294c0,-6.264000000000001,-5.094999999999985,-11.359000000000005,-11.355999999999995,-11.359000000000005s-11.354,5.096000000000004,-11.354,11.359000000000005c0,6.259000000000009,5.093999999999994,11.352000000000006,11.354,11.352000000000006c6.2620000000000005,-0.001999999999995339,11.355999999999995,-5.093999999999994,11.355999999999995,-11.352000000000006ZM41.57669044407502,21.448295929527298c-4.055999999999983,0,-7.353999999999999,-3.298000000000002,-7.353999999999999,-7.351999999999995c0,-4.057999999999996,3.2990000000000066,-7.358999999999998,7.353999999999999,-7.358999999999998c4.057000000000002,0,7.356000000000009,3.301999999999996,7.356000000000009,7.358999999999998c-1.4210854715202004e-14,4.054000000000007,-3.2990000000000066,7.351999999999995,-7.356000000000009,7.351999999999995Z" transform="matrix(1.12456 0 0 1.12456 -3.69625 -0.297337)"/>
            <path d="M63.47375470371235,30.039551312408413c-6.2620000000000005,0,-11.355000000000004,5.096000000000089,-11.355000000000004,11.35900000000003c0,6.2590000000000146,5.093999999999994,11.352000000000004,11.355000000000004,11.352000000000004s11.356000000000144,-5.092999999999989,11.356000000000144,-11.352000000000004c2.842170943040401e-14,-6.261999999999986,-5.093999999999994,-11.35900000000003,-11.356000000000144,-11.35900000000003ZM63.47375470371235,48.75055131240845c-4.055999999999983,0,-7.354999999999976,-3.2979999999999734,-7.354999999999976,-7.352000000000004c0,-4.0579999999999785,3.299999999999983,-7.3589999999999876,7.354999999999976,-7.3589999999999876c4.057000000000137,0,7.356000000000144,3.3019999999999996,7.356000000000144,7.3589999999999876c2.842170943040401e-14,4.0540000000000305,-3.298999999999978,7.352000000000004,-7.356000000000144,7.352000000000004Z" transform="matrix(1.12627 0.0295571 -0.0295571 1.12627 -8.25666 -6.85042)"/>
          </g>
        </g>
        </svg>`);
        case 'LINE':
          return this.sanitizer.bypassSecurityTrustHtml('<svg viewBox="64 64 896 896" fill="currentColor" width="1em" height="1em" data-icon="radius-setting" aria-hidden="true"><path d="M396 140h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm-44 684h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm524-204h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM192 344h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 160h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm320 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm160 0h-56c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm140-284c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V370c0-127-103-230-230-230H484c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h170c87.3 0 158 70.7 158 158v170zM236 96H92c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h144c4.4 0 8-3.6 8-8V104c0-4.4-3.6-8-8-8zm-48 101.6c0 1.3-1.1 2.4-2.4 2.4h-43.2c-1.3 0-2.4-1.1-2.4-2.4v-43.2c0-1.3 1.1-2.4 2.4-2.4h43.2c1.3 0 2.4 1.1 2.4 2.4v43.2zM920 780H776c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h144c4.4 0 8-3.6 8-8V788c0-4.4-3.6-8-8-8zm-48 101.6c0 1.3-1.1 2.4-2.4 2.4h-43.2c-1.3 0-2.4-1.1-2.4-2.4v-43.2c0-1.3 1.1-2.4 2.4-2.4h43.2c1.3 0 2.4 1.1 2.4 2.4v43.2z"></path></svg>');
        case 'POLYGON':
          return this.sanitizer.bypassSecurityTrustHtml(`<svg viewBox="64 64 896 896" fill="currentColor" width="1em" height="1em" data-icon="build" aria-hidden="true"><path d="M916 210H376c-17.7 0-32 14.3-32 32v236H108c-17.7 0-32 14.3-32 32v272c0 17.7 14.3 32 32 32h540c17.7 0 32-14.3 32-32V546h236c17.7 0 32-14.3 32-32V242c0-17.7-14.3-32-32-32zm-504 68h200v200H412V278zm-68 468H144V546h200v200zm268 0H412V546h200v200zm268-268H680V278h200v200z"></path></svg>`)
        case 'RASTER':
          return this.sanitizer.bypassSecurityTrustHtml('<svg viewBox="64 64 896 896" fill="currentColor" width="1em" height="1em" data-icon="heat-map" aria-hidden="true"><path d="M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-790.4-23.9L512 231.9 858.7 832H165.3zm319-474.1l-228 394c-12.3 21.3 3.1 48 27.7 48h455.8c24.7 0 40.1-26.7 27.7-48L539.7 358c-6.2-10.7-17-16-27.7-16-10.8 0-21.6 5.3-27.7 16zm214 386H325.7L512 422l186.3 322zm-214-194.1l-57 98.4C415 669.5 430.4 696 455 696h114c24.6 0 39.9-26.5 27.7-47.7l-57-98.4c-6.1-10.6-16.9-15.9-27.7-15.9s-21.5 5.3-27.7 15.9zm57.1 98.4h-58.7l29.4-50.7 29.3 50.7z"></path></svg>');

      }
    }
  }

  getDatasourceFields(username, layername) {
    const s = this.http.get(this.baseUrl + '/layers/fields/' + username + '/' + layername);
    return s.map((fields: any) => {
      return fields;
    }).toPromise();
  }

  getNumericDatasourceFields(username, layername) {
    const s = this.http.get(this.baseUrl + '/layers/numericfields/' + username + '/' + layername);
    return s.map((fields: any) => {
      return fields;
    }).toPromise();
  }

  createNewEntryControl(_item, _parent) {
    this.createNewEntryControlTrigger.emit({ 'item': _item, 'parent': _parent });
  }


}
